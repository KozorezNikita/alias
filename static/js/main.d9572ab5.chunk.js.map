{"version":3,"sources":["words/words.js","components/AliasProvider.js","components/RoundStart.js","components/History.js","components/Game.js","components/Alias.js","components/Quit.js","components/Start.js","components/StepFor.js","router/router.js","components/TeamSelect.js","components/Settings.js","components/AliasRouter.js","App.js","index.js"],"names":["words","AliasContext","createContext","AliasProvider","props","useState","theme","setTheme","seconds","setSeconds","copySeconds","setCopySeconds","timer","setTimer","start","setStart","ptsWin","setPtsWin","currentTeamIndex","setCurrentTeamIndex","teamAmount","setTeamAmount","usedWords","setUsedWords","teams","setTeams","randomWord","setRandomWord","game","setGame","round","setRound","completed","setCompleted","winner","setWinner","addPts","team","count","i","length","j","Provider","value","generateWord","difference","filter","word","includes","Math","floor","random","concat","startGame","reduce","acc","addWord","slice","name","addRound","changeWord","map","item","checkWinner","children","RoundStart","useContext","useEffect","className","type","checked","onChange","e","target","onClick","icon","faArrowCircleRight","size","faShare","History","to","Game","clearInterval","setInterval","Alias","Quit","Start","StepFor","aliasRoutes","path","component","exact","Array","parseInt","fill","keys","placeholder","required","disabled","every","faMedal","faStar","sort","a","b","AliasRouter","style","backgroundColor","route","App","basename","ReactDOM","render","document","getElementById"],"mappings":"6LAkHeA,EAlHD,CACZ,MACA,UACA,OACA,SACA,UACA,OACA,QACA,aACA,YACA,SACA,WACA,UACA,MACA,SACA,MACA,SACA,QACA,WACA,SACA,UACA,OACA,MACA,UACA,SACA,QACA,YACA,UACA,YACA,SACA,OACA,SACA,YACA,SACA,QACA,aACA,UACA,UACA,WACA,cACA,SACA,UACA,eACA,QACA,OACA,WACA,QACA,UACA,UACA,UACA,WACA,UACA,OACA,QACA,cACA,WACA,UACA,gBACA,cACA,QACA,UACA,QACA,WACA,YACA,gBACA,WACA,QACA,SACA,UACA,UACA,WACA,WACA,SACA,aACA,UACA,OACA,OACA,UACA,eACA,aACA,aACA,UACA,aACA,QACA,QACA,SACA,OACA,gBACA,UACA,WACA,cACA,UACA,SACA,QACA,MACA,aACA,OACA,YACA,QACA,UACA,OACA,OACA,QACA,QACA,QACA,OACA,UACA,SACA,SACA,WACA,UACA,Q,OC5GWC,EAAeC,0BAwIbC,EAtIO,SAACC,GACrB,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAsCJ,mBAAS,IAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KACA,EAA0BN,mBAAS,IAAnC,mBAAOO,EAAP,KAAcC,EAAd,KACA,EAA0BR,oBAAS,GAAnC,mBAAOS,EAAP,KAAcC,EAAd,KACA,EAA4BV,mBAAS,IAArC,mBAAOW,EAAP,KAAeC,EAAf,KACA,EAAgDZ,mBAAS,GAAzD,mBAAOa,EAAP,KAAyBC,EAAzB,KACA,EAAoCd,mBAAS,GAA7C,mBAAOe,EAAP,KAAmBC,EAAnB,KACA,EAAkChB,mBAAS,IAA3C,mBAAOiB,EAAP,KAAkBC,EAAlB,KACA,EAA0BlB,mBAAS,IAAnC,mBAAOmB,EAAP,KAAcC,EAAd,KACA,EAAoCpB,mBAAS,IAA7C,mBAAOqB,EAAP,KAAmBC,EAAnB,KACA,EAAwBtB,mBAAS,MAAjC,mBAAOuB,GAAP,KAAaC,GAAb,KACA,GAA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","file":"static/js/main.d9572ab5.chunk.js","sourcesContent":["const words = [\r\n  \"box\",\r\n  \"control\",\r\n  \"kick\",\r\n  \"vision\",\r\n  \"ability\",\r\n  \"able\",\r\n  \"about\",\r\n  \"absolutely\",\r\n  \"accordion\",\r\n  \"across\",\r\n  \"activity\",\r\n  \"address\",\r\n  \"age\",\r\n  \"afraid\",\r\n  \"air\",\r\n  \"almost\",\r\n  \"alone\",\r\n  \"american\",\r\n  \"animal\",\r\n  \"anymore\",\r\n  \"area\",\r\n  \"arm\",\r\n  \"article\",\r\n  \"attack\",\r\n  \"witch\",\r\n  \"statistic\",\r\n  \"ceiling\",\r\n  \"ambulance\",\r\n  \"factor\",\r\n  \"fire\",\r\n  \"engine\",\r\n  \"lifeguard\",\r\n  \"design\",\r\n  \"scald\",\r\n  \"settlement\",\r\n  \"product\",\r\n  \"refugee\",\r\n  \"research\",\r\n  \"destination\",\r\n  \"border\",\r\n  \"bargain\",\r\n  \"architecture\",\r\n  \"shape\",\r\n  \"risk\",\r\n  \"bankrupt\",\r\n  \"trace\",\r\n  \"release\",\r\n  \"amateur\",\r\n  \"benefit\",\r\n  \"currency\",\r\n  \"destiny\",\r\n  \"gift\",\r\n  \"image\",\r\n  \"humiliation\",\r\n  \"invasion\",\r\n  \"lottery\",\r\n  \"mathematician\",\r\n  \"millionaire\",\r\n  \"prize\",\r\n  \"wannabe\",\r\n  \"vital\",\r\n  \"increase\",\r\n  \"challenge\",\r\n  \"entertainment\",\r\n  \"industry\",\r\n  \"stock\",\r\n  \"talent\",\r\n  \"leisure\",\r\n  \"witness\",\r\n  \"speeding\",\r\n  \"sentence\",\r\n  \"ransom\",\r\n  \"perfomance\",\r\n  \"offence\",\r\n  \"jury\",\r\n  \"fine\",\r\n  \"feature\",\r\n  \"construction\",\r\n  \"confidence\",\r\n  \"brainpower\",\r\n  \"ability\",\r\n  \"background\",\r\n  \"first\",\r\n  \"water\",\r\n  \"accent\",\r\n  \"call\",\r\n  \"determination\",\r\n  \"emotion\",\r\n  \"employee\",\r\n  \"flexibility\",\r\n  \"history\",\r\n  \"humour\",\r\n  \"unity\",\r\n  \"day\",\r\n  \"protection\",\r\n  \"race\",\r\n  \"tolerance\",\r\n  \"truth\",\r\n  \"biscuit\",\r\n  \"part\",\r\n  \"lion\",\r\n  \"tiger\",\r\n  \"shark\",\r\n  \"whale\",\r\n  \"chat\",\r\n  \"gesture\",\r\n  \"e-mail\",\r\n  \"toilet\",\r\n  \"computer\",\r\n  \"shampoo\",\r\n  \"soap\",\r\n];\r\n\r\nexport default words;\r\n","import { useState, createContext } from \"react\";\r\nimport words from \"../words/words\";\r\n\r\nexport const AliasContext = createContext();\r\n\r\nconst AliasProvider = (props) => {\r\n  const [theme, setTheme] = useState(\"\");\r\n  const [seconds, setSeconds] = useState(60);\r\n  const [copySeconds, setCopySeconds] = useState(\"\");\r\n  const [timer, setTimer] = useState(\"\");\r\n  const [start, setStart] = useState(false);\r\n  const [ptsWin, setPtsWin] = useState(30);\r\n  const [currentTeamIndex, setCurrentTeamIndex] = useState(0);\r\n  const [teamAmount, setTeamAmount] = useState(2);\r\n  const [usedWords, setUsedWords] = useState([]);\r\n  const [teams, setTeams] = useState([]);\r\n  const [randomWord, setRandomWord] = useState(\"\");\r\n  const [game, setGame] = useState(null);\r\n  const [round, setRound] = useState([]);\r\n  const [completed, setCompleted] = useState(false);\r\n  const [winner, setWinner] = useState(\"\");\r\n\r\n  const generateWord = () => {\r\n    let difference = words.filter((word) => !usedWords.includes(word));\r\n    let randNum = Math.floor(Math.random() * difference.length);\r\n    let word = difference[randNum];\r\n    setRandomWord(word);\r\n    setUsedWords(usedWords.concat([word]));\r\n  };\r\n\r\n  const startGame = () => {\r\n    setGame(teams.reduce((acc, team) => ({ ...acc, [team]: [] }), {}));\r\n  };\r\n\r\n  const addRound = (team) => {\r\n    setGame((game) => {\r\n      return { ...game, [team]: game[team].concat([[]]) };\r\n    });\r\n  };\r\n\r\n  const addWord = (team) => {\r\n    setGame((game) => {\r\n      return {\r\n        ...game,\r\n        [team]: game[team].slice(0, game[team].length - 1).concat([\r\n          game[team][game[team].length - 1].concat([\r\n            {\r\n              name: randomWord,\r\n              completed: completed,\r\n            },\r\n          ]),\r\n        ]),\r\n      };\r\n    });\r\n  };\r\n\r\n  const changeWord = (team, randomWord, completed) => {\r\n    setGame((game) => {\r\n      return {\r\n        ...game,\r\n        [team]: game[team].slice(0, game[team].length - 1).concat([\r\n          game[team][game[team].length - 1].map((item) =>\r\n            item.name === randomWord\r\n              ? {\r\n                  ...item,\r\n                  completed: completed,\r\n                }\r\n              : item\r\n          ),\r\n        ]),\r\n      };\r\n    });\r\n  };\r\n\r\n  const addPts = (team) => {\r\n    let count = 0;\r\n    for (var i = 0; i < game[team].length; i++) {\r\n      for (var j = 0; j < game[team][i].length; j++) {\r\n        if (game[team][i][j].completed) {\r\n          count++;\r\n        }\r\n      }\r\n    }\r\n    return count;\r\n  };\r\n\r\n  const checkWinner = (team) => {\r\n    if (addPts(team) >= ptsWin) {\r\n      setWinner(team);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AliasContext.Provider\r\n      value={{\r\n        theme,\r\n        setTheme,\r\n        seconds,\r\n        setSeconds,\r\n        copySeconds,\r\n        setCopySeconds,\r\n        start,\r\n        setStart,\r\n        timer,\r\n        setTimer,\r\n        ptsWin,\r\n        setPtsWin,\r\n        randomWord,\r\n        setRandomWord,\r\n        teamAmount,\r\n        setTeamAmount,\r\n        teams,\r\n        setTeams,\r\n        currentTeamIndex,\r\n        setCurrentTeamIndex,\r\n        usedWords,\r\n        setUsedWords,\r\n        game,\r\n        setGame,\r\n        round,\r\n        setRound,\r\n        completed,\r\n        setCompleted,\r\n        winner,\r\n        setWinner,\r\n        generateWord,\r\n        startGame,\r\n        addWord,\r\n        addRound,\r\n        changeWord,\r\n        addPts,\r\n        checkWinner,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AliasContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AliasProvider;\r\n","import { useContext, useEffect } from \"react\";\r\nimport { AliasContext } from \"./AliasProvider\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faArrowCircleRight, faShare } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction RoundStart() {\r\n  const {\r\n    randomWord,\r\n    generateWord,\r\n    copySeconds,\r\n    addWord,\r\n    currentTeamIndex,\r\n    teams,\r\n    completed,\r\n    setCompleted,\r\n    setRandomWord,\r\n    setStart,\r\n  } = useContext(AliasContext);\r\n\r\n  useEffect(() => {\r\n    if (!randomWord) {\r\n      setStart(false);\r\n    }\r\n  }, [randomWord]);\r\n\r\n  return (\r\n    <div className=\"roundStart\">\r\n      <p className=\"head\">{teams[currentTeamIndex]}</p>\r\n      <div>\r\n        <label className=\"roundStart-container\">\r\n          {randomWord}\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={completed}\r\n            onChange={(e) => setCompleted(e.target.checked)}\r\n          />\r\n          <span className=\"roundStart-checkmark\"></span>\r\n          <button\r\n            onClick={() => {\r\n              addWord(teams[currentTeamIndex], randomWord);\r\n\r\n              if (copySeconds > 0) {\r\n                generateWord();\r\n              } else {\r\n                setRandomWord(\"\");\r\n              }\r\n\r\n              setCompleted(false);\r\n            }}\r\n          >\r\n            {copySeconds > 0 ? (\r\n              <FontAwesomeIcon icon={faArrowCircleRight} size=\"3x\" />\r\n            ) : (\r\n              <FontAwesomeIcon icon={faShare} size=\"3x\" />\r\n            )}\r\n          </button>\r\n        </label>\r\n      </div>\r\n      <p className=\"foot\">{copySeconds > 0 ? copySeconds : 0}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RoundStart;\r\n","import { useContext, useEffect } from \"react\";\r\nimport { AliasContext } from \"./AliasProvider\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction History() {\r\n  const {\r\n    game,\r\n    teams,\r\n    currentTeamIndex,\r\n    setCurrentTeamIndex,\r\n    changeWord,\r\n    checkWinner,\r\n  } = useContext(AliasContext);\r\n\r\n  useEffect(() => {\r\n    if (currentTeamIndex === teams.length - 1) {\r\n      for (var i = 0; i < teams.length; i++) {\r\n        checkWinner(teams[i]);\r\n      }\r\n    }\r\n  }, [currentTeamIndex]);\r\n\r\n  return (\r\n    <div className=\"history\">\r\n      <div>\r\n        {game[teams[currentTeamIndex]][\r\n          game[teams[currentTeamIndex]].length - 1\r\n        ].map((item) => (\r\n          <label className=\"history-container\" key={item.name}>\r\n            {item.name}\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={item.completed}\r\n              onChange={(e) =>\r\n                changeWord(teams[currentTeamIndex], item.name, e.target.checked)\r\n              }\r\n            />\r\n            <span className=\"history-checkmark\"></span>\r\n          </label>\r\n        ))}\r\n      </div>\r\n\r\n      <Link\r\n        to=\"/StepFor\"\r\n        onClick={() => {\r\n          setCurrentTeamIndex((currentTeamIndex + 1) % teams.length);\r\n        }}\r\n      >\r\n        Pass the turn\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default History;\r\n","import { useContext, useEffect } from \"react\";\r\nimport { AliasContext } from \"./AliasProvider\";\r\nimport RoundStart from \"./RoundStart\";\r\nimport History from \"./History\";\r\n\r\nfunction Game() {\r\n  const { setCopySeconds, seconds, timer, setTimer, start } =\r\n    useContext(AliasContext);\r\n\r\n  useEffect(() => {\r\n    clearInterval(timer);\r\n    setCopySeconds(seconds);\r\n    setTimer(\r\n      setInterval(() => setCopySeconds((copySeconds) => copySeconds - 1), 1000)\r\n    );\r\n  }, [start]);\r\n\r\n  return <div>{start ? <RoundStart /> : <History />}</div>;\r\n}\r\n\r\nexport default Game;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Alias() {\r\n  return (\r\n    <div className=\"menu\">\r\n      <Link to=\"/Start\">Start</Link>\r\n      <Link to=\"/Settings\">Settings</Link>\r\n      <Link to=\"/Quit\">Quit</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Alias;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Quit() {\r\n  return (\r\n    <div className=\"quit\">\r\n      <label>Quit</label>\r\n      <input type=\"text\" />\r\n      <Link to=\"/Menu\">Back to the menu</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Quit;\r\n","import { useContext } from \"react\";\r\nimport { AliasContext } from \"./AliasProvider\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Start() {\r\n  const { seconds, setSeconds, ptsWin, setPtsWin } = useContext(AliasContext);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"start\">\r\n        <label>Points for the win</label>\r\n        <input\r\n          type=\"text\"\r\n          value={ptsWin}\r\n          onChange={(e) => setPtsWin(e.target.value)}\r\n        />\r\n\r\n        <label>Round time</label>\r\n        <select value={seconds} onChange={(e) => setSeconds(e.target.value)}>\r\n          <option value=\"5\">5 seconds</option>\r\n          <option value=\"60\">60 seconds</option>\r\n          <option value=\"90\">90 seconds</option>\r\n          <option value=\"120\">120 seconds</option>\r\n        </select>\r\n      </div>\r\n\r\n      <Link to=\"/Menu\">Back to the menu</Link>\r\n      <Link to=\"/TeamSelect\">To team selection!</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Start;\r\n","import { useContext } from \"react\";\r\nimport { AliasContext } from \"./AliasProvider\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faStar, faMedal } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction StepFor() {\r\n  const {\r\n    currentTeamIndex,\r\n    teams,\r\n    addRound,\r\n    setStart,\r\n    generateWord,\r\n    setCurrentTeamIndex,\r\n    addPts,\r\n    winner,\r\n    setGame,\r\n    setWinner,\r\n    setUsedWords,\r\n    setTeams,\r\n  } = useContext(AliasContext);\r\n  return (\r\n    <div className=\"stepFor\">\r\n      {winner === \"\" ? (\r\n        <div>\r\n          <Link to=\"/Game\">\r\n            <button\r\n              className=\"btn-stepFor\"\r\n              onClick={() => {\r\n                addRound(teams[currentTeamIndex]);\r\n                generateWord();\r\n                setStart(true);\r\n              }}\r\n            >\r\n              The step is for {teams[currentTeamIndex]}\r\n            </button>\r\n          </Link>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>\r\n                  <FontAwesomeIcon icon={faMedal} />\r\n                </th>\r\n                <th>Teams</th>\r\n                <th>\r\n                  <FontAwesomeIcon icon={faStar} />\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {teams\r\n                .slice()\r\n                .sort((a, b) => addPts(b) - addPts(a))\r\n                .map((team, i) => (\r\n                  <tr key={team}>\r\n                    <td>{i + 1}</td>\r\n                    <td>{team}</td>\r\n                    <td>{addPts(team)}</td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      ) : (\r\n        <Link to=\"/Menu\">\r\n          <button\r\n            className=\"btn-stepFor\"\r\n            onClick={() => {\r\n              setCurrentTeamIndex(0);\r\n              setTeams([]);\r\n              setUsedWords([]);\r\n              setGame(null);\r\n              setWinner(\"\");\r\n            }}\r\n          >\r\n            The winner is {winner}\r\n          </button>\r\n        </Link>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StepFor;\r\n","import Game from \"../components/Game\";\r\nimport History from \"../components/History\";\r\nimport Alias from \"../components/Alias\";\r\nimport Quit from \"../components/Quit\";\r\nimport RoundStart from \"../components/RoundStart\";\r\nimport Start from \"../components/Start\";\r\nimport TeamSelect from \"../components/TeamSelect\";\r\nimport Settings from \"../components/Settings\";\r\nimport StepFor from \"../components/StepFor\";\r\n\r\nexport const aliasRoutes = [\r\n  { path: \"/game\", component: Game, exact: true },\r\n  { path: \"/history\", component: History, exact: true },\r\n  { path: \"/alias\", component: Alias, exact: true },\r\n  { path: \"/quit\", component: Quit, exact: true },\r\n  { path: \"/roundStart\", component: RoundStart, exact: true },\r\n  { path: \"/start\", component: Start, exact: true },\r\n  { path: \"/teamSelect\", component: TeamSelect, exact: true },\r\n  { path: \"/settings\", component: Settings, exact: true },\r\n  { path: \"/stepFor\", component: StepFor, exact: true },\r\n];\r\n","import { useContext, useEffect } from \"react\";\r\nimport { AliasContext } from \"./AliasProvider\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction TeamSelect() {\r\n  const { teamAmount, setTeamAmount, teams, setTeams, startGame } =\r\n    useContext(AliasContext);\r\n\r\n  useEffect(() => {\r\n    setTeams(Array(parseInt(teamAmount)).fill(\"\"));\r\n  }, [teamAmount]);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"teamSelect\">\r\n        <label>Select amount of teams</label>\r\n        <select\r\n          value={teamAmount}\r\n          onChange={(e) => setTeamAmount(e.target.value)}\r\n        >\r\n          <option value=\"Select\">Select amount of teams</option>\r\n          <option value=\"2\">2 teams</option>\r\n          <option value=\"3\">3 teams</option>\r\n          <option value=\"4\">4 teams</option>\r\n        </select>\r\n        {[...Array(parseInt(teamAmount)).keys()].map((i) => (\r\n          <div key={i + 1}>\r\n            <label>Team {i + 1} name</label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder={\"Team\" + parseInt(i + 1)}\r\n              value={teams[i] || \"\"}\r\n              onChange={(e) =>\r\n                setTeams((teams) =>\r\n                  teams.map((team, j) => (i === j ? e.target.value : team))\r\n                )\r\n              }\r\n              required\r\n            />\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <Link to=\"/Start\">\r\n        <button>To options</button>\r\n      </Link>\r\n      <Link to=\"/StepFor\">\r\n        <button\r\n          className=\"teamSelect-btn\"\r\n          disabled={!teams.every((team) => team !== \"\")}\r\n          onClick={startGame}\r\n        >\r\n          {\" \"}\r\n          To the game!\r\n        </button>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TeamSelect;\r\n","import { useContext } from \"react\";\r\nimport { AliasContext } from \"./AliasProvider\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Settings() {\r\n  const { setTheme } = useContext(AliasContext);\r\n  return (\r\n    <div className=\"settings\">\r\n      <label>Choose your theme</label>\r\n      <input type=\"text\" onChange={(e) => setTheme(e.target.value)} />\r\n\r\n      <label>Choose your theme</label>\r\n      <input type=\"text\" onChange={(e) => setTheme(e.target.value)} />\r\n\r\n      <Link to=\"/Menu\">Back to the menu</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Settings;\r\n","import { useContext } from \"react\";\r\nimport {\r\n  Switch, Route, Redirect } from \"react-router-dom\";\r\nimport { AliasContext } from \"./AliasProvider\";\r\nimport { aliasRoutes } from \"../router/router\";\r\n\r\nfunction AliasRouter() {\r\n  const { theme } = useContext(AliasContext);\r\n  return (\r\n    <div className=\"alias\" style={{ backgroundColor: theme }}>\r\n      <h1>ALIAS</h1>\r\n      <Switch>\r\n        {aliasRoutes.map((route) => (\r\n          <Route\r\n            path={route.path}\r\n            component={route.component}\r\n            exact={route.exact}\r\n            key={route.path}\r\n          />\r\n        ))}\r\n        <Redirect to=\"Alias\" />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AliasRouter;\r\n\r\n/*\r\n\r\nimport {useContext} from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\r\nimport { AliasContext } from \"./AliasProvider\";\r\nimport Game from \"./Game\";\r\nimport Start from \"./Start\";\r\nimport Settings from \"./Settings\";\r\nimport Quit from \"./Quit\";\r\nimport Menu from \"./Menu\";\r\nimport TeamSelect from \"./TeamSelect\";\r\nimport StepFor from \"./StepFor\";\r\nimport History from \"./History\";\r\n\r\nfunction AliasRouter() {\r\n  const { theme } = useContext(AliasContext);\r\n  return (\r\n    <Router>\r\n      <div className=\"alias\" style={{ backgroundColor: theme }}>\r\n        <h1>ALIAS</h1>\r\n        <Switch>\r\n          <Route path=\"/Game\">\r\n            <Game />\r\n          </Route>\r\n          <Route path=\"/History\">\r\n            <History />\r\n          </Route>\r\n          <Route path=\"/StepFor\">\r\n            <StepFor />\r\n          </Route>\r\n          <Route path=\"/TeamSelect\">\r\n            <TeamSelect />\r\n          </Route>\r\n          <Route path=\"/Start\">\r\n            <Start />\r\n          </Route>\r\n          <Route path=\"/Settings\">\r\n            <Settings />\r\n          </Route>\r\n          <Route path=\"/Quit\">\r\n            <Quit />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Menu />\r\n          </Route>\r\n          <Redirect to=\"Menu\" />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default AliasRouter;\r\n*/\r\n","import React from \"react\";\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport \"./styles/App.css\";\r\nimport AliasProvider from \"./components/AliasProvider\";\r\nimport AliasRouter from \"./components/AliasRouter\";\r\n\r\nfunction App() {\r\n  return (\r\n    <AliasProvider>\r\n      <HashRouter basename=\"/\">\r\n        <AliasRouter />\r\n      </HashRouter>\r\n    </AliasProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}